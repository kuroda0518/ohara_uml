@startuml web訪問者システム-新規登録
actor ユーザー
boundary 新規登録画面
boundary 確認メール
boundary 新規登録成功画面
control 新規登録処理
entity ユーザー情報

ユーザー -> 新規登録画面: 必要項目を入力（ID/PW/氏名/学校/所属/年齢/メール/電話）
activate 新規登録画面
新規登録画面 -> 新規登録処理: 入力データ送信
activate 新規登録処理

' 入力チェック
新規登録処理 -> 新規登録処理: 入力チェック（必須/形式）
alt 入力エラーあり
  新規登録処理 -> 新規登録画面: エラーメッセージ表示・再入力促し
  新規登録画面 -> ユーザー: 結果を表示
else 正常
  ' 確認メール送信
  新規登録処理 -> 確認メール: 確認メール送信
  activate 確認メール
  alt メール送信失敗/無効アドレス
    確認メール --> 新規登録処理: 送信失敗
    新規登録処理 -> 新規登録画面: 送信失敗通知
    新規登録画面 -> ユーザー: エラーメッセージ表示
  else 送信成功
    確認メール --> ユーザー: 確認リンク受信
    ユーザー -> 新規登録処理: 確認リンクをクリック
    alt 期限切れ
      新規登録処理 -> 新規登録画面: 有効期限切れ通知
      新規登録画面 -> ユーザー: 再手続き案内
    else 有効
      新規登録処理 -> ユーザー情報: ユーザー作成・保存
      activate ユーザー情報
      ユーザー情報 --> 新規登録処理: 保存結果
      deactivate ユーザー情報
      新規登録処理 -> 新規登録成功画面: 成功通知
      activate 新規登録成功画面
      新規登録成功画面 -> ユーザー: 完了メッセージ表示
      deactivate 新規登録成功画面
    end
  end
  deactivate 確認メール
end

deactivate 新規登録処理
deactivate 新規登録画面
@enduml


' 記述項目		記述内容									
' ユースケース名		新規登録									
' ユースケース概要		新規の訪問者は情報の登録ができる									
' アクター		ユーザー（新規）									
' 事前条件		新規登録画面の表示									
' 事後条件		新規登録成功画面の表示									
' イベントフロー											
基本フロー		
"1.ユーザーは、ユーザーIDを入力する
2.ユーザーは、パスワード（アルファベット+数字の8文字以上の文字列）を入力する
3.ユーザーは、名前,学校名,所属名,年齢,を入力する
4,ユーザーは、メールアドレスを入力する
5.ユーザーは、電話番号を入力する
6.システムは入力内容を受け取り、必須項目が正しく入力されているかを確認する。
7.システムは入力されたメールアドレス宛に確認メールを送信する。
8.ユーザーがメール内のリンクをクリックすると、システムは認証を行い、登録を完了させる。
9.システムは「新規登録成功画面」を表示する。
"									
代替フロー		"6.→入力内容に未入力や形式エラーがある場合、システムはエラーメッセージを表示し、再入力を促す。
7→メールアドレスが無効な場合、システムは登録を完了せずエラーを通知する。
8→.ユーザーがメール内のリンクを一定時間内にクリックしなかった場合、登録は無効となる。"									